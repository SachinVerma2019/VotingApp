// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"
	"voting-app/ent/poll"
	"voting-app/ent/result"
	"voting-app/ent/schema"
	"voting-app/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	pollFields := schema.Poll{}.Fields()
	_ = pollFields
	// pollDescOwnerid is the schema descriptor for ownerid field.
	pollDescOwnerid := pollFields[0].Descriptor()
	// poll.DefaultOwnerid holds the default value on creation for the ownerid field.
	poll.DefaultOwnerid = pollDescOwnerid.Default.(int)
	// pollDescTopic is the schema descriptor for topic field.
	pollDescTopic := pollFields[1].Descriptor()
	// poll.DefaultTopic holds the default value on creation for the topic field.
	poll.DefaultTopic = pollDescTopic.Default.(string)
	// pollDescCreatetime is the schema descriptor for createtime field.
	pollDescCreatetime := pollFields[3].Descriptor()
	// poll.DefaultCreatetime holds the default value on creation for the createtime field.
	poll.DefaultCreatetime = pollDescCreatetime.Default.(func() time.Time)
	// pollDescModifytime is the schema descriptor for modifytime field.
	pollDescModifytime := pollFields[4].Descriptor()
	// poll.DefaultModifytime holds the default value on creation for the modifytime field.
	poll.DefaultModifytime = pollDescModifytime.Default.(func() time.Time)
	resultFields := schema.Result{}.Fields()
	_ = resultFields
	// resultDescUserid is the schema descriptor for userid field.
	resultDescUserid := resultFields[0].Descriptor()
	// result.DefaultUserid holds the default value on creation for the userid field.
	result.DefaultUserid = resultDescUserid.Default.(int)
	// resultDescPollid is the schema descriptor for pollid field.
	resultDescPollid := resultFields[1].Descriptor()
	// result.DefaultPollid holds the default value on creation for the pollid field.
	result.DefaultPollid = resultDescPollid.Default.(int)
	// resultDescOption is the schema descriptor for option field.
	resultDescOption := resultFields[2].Descriptor()
	// result.DefaultOption holds the default value on creation for the option field.
	result.DefaultOption = resultDescOption.Default.(string)
	// resultDescCreatetime is the schema descriptor for createtime field.
	resultDescCreatetime := resultFields[3].Descriptor()
	// result.DefaultCreatetime holds the default value on creation for the createtime field.
	result.DefaultCreatetime = resultDescCreatetime.Default.(func() time.Time)
	// resultDescModifytime is the schema descriptor for modifytime field.
	resultDescModifytime := resultFields[4].Descriptor()
	// result.DefaultModifytime holds the default value on creation for the modifytime field.
	result.DefaultModifytime = resultDescModifytime.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.DefaultEmail holds the default value on creation for the email field.
	user.DefaultEmail = userDescEmail.Default.(string)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.DefaultPassword holds the default value on creation for the password field.
	user.DefaultPassword = userDescPassword.Default.(string)
}
